<?php


function custom_product_importer_cron() {

   $csv_path = 'https://demoworksite.online/sites/default/files/product_data/ARTIKEL_Nebel.csv';   
   // Initialize an empty array to store the product data
   $product_data = [];
   
   // Open the file for reading
   if (($handle = fopen($csv_path, 'r')) !== FALSE) {
     // Get the header row (optional)
     $headers = fgetcsv($handle);
   
     // Loop through each row of the CSV
     while (($row = fgetcsv($handle)) !== FALSE) {
       // Combine headers with row data for associative array (optional)
       $product_data[] = array_combine($headers, $row);
     }
   
     foreach ($product_data as $key  => $data) {
        $new_arr = [];
        foreach($data as $k=> $v){
        $new_arr[]= $v;
        }
        dump($new_arr);
//         $sku = self::sanitizeInput($new_arr[0]);
//         $article_group = self::sanitizeInput($new_arr[1]);
//         $merchandise_group = self::sanitizeInput($new_arr[4]);
//         $v_title = self::sanitizeInput($new_arr[6]);
//         $variation_title= $v_title;
//         if(str_contains($v_title, ',,') || str_contains($v_title, ',') || str_contains($v_title, '.') || str_contains($v_title, '™') || str_contains($v_title, 'š') || str_contains($v_title, 'Ž') || str_contains($v_title, '+')){
//           $variation_title= '"'.$v_title.'"';
//         }else{
//           $variation_title= $v_title;
//         }
//         $p_title = self::sanitizeInput($new_arr[5]);
//         $product_title= $p_title;
//         if(str_contains($p_title, ',,') || str_contains($p_title, ',') || str_contains($p_title, '.') || str_contains($p_title, '™') || str_contains($p_title, 'š') || str_contains($p_title, 'Ž') || str_contains($p_title, '+')){
//           $product_title= '"'.$p_title.'"';
//         }else{
//           $product_title= $p_title;
//         }
//         $color = self::sanitizeInput($new_arr[7]);
//         $guise = self::sanitizeInput($new_arr[9]);
//         $weight_kg = self::sanitizeInput($new_arr[10]);

       

//         $price = self::sanitizeInput($new_arr['price']);  
  
//         $price_1 = self::sanitizeInput($new_arr[11]);
//         $unit_1 = self::sanitizeInput($new_arr[12]);
     
//         $price_2 = self::sanitizeInput($new_arr[13]);
//         $unit_2 = self::sanitizeInput($new_arr[14]);
  
  
//         $price_3 = self::sanitizeInput($new_arr[15]);
//         $unit_3 = self::sanitizeInput($new_arr[16]);
  
    
//         $price_4 = self::sanitizeInput($new_arr[17]);
//         $unit_4 = self::sanitizeInput($new_arr[18]);
  
        
//         $price_5 = self::sanitizeInput($new_arr[19]);
//         $unit_5 = self::sanitizeInput($new_arr[20]);
  
     
  
//         $stock = self::sanitizeInput($new_arr[22]);
      
//         $customs_tariff_number = self::sanitizeInput($new_arr[23]);

  
//       $product_variation = \Drupal::entityTypeManager()
//       ->getStorage('commerce_product_variation')
//       ->loadByProperties(['sku' => $sku]);
  
//   $product_variation = reset($product_variation); //loading variation
  
//   if ($product_variation) {
//     $existing_product = $product_variation->getProduct(); //loading product using variation
//   }

  
//         if ($existing_product) {
//           $product = reset($existing_product);
//           $existing_variations = $product->getVariations();
//           $variation_found = false;

//                 if (empty($color)) {
//                   $product_variation->set('attribute_color', NULL);
//                 } else {
//                   $color_attribute_id = self::getColorAttributeId($color);
//                   $product_variation->set('attribute_color', $color_attribute_id);
//                 }
    
//                 $product_variation->set('title', $variation_title);
    
//                 $stock = ['stock' => ['value' => 0]];
     
//                   $product_variation->set('field_stock_level', [$stock]);

    
//                 $product_variation->save();
//                 // Checking and updating price
//                 $price_list = \Drupal::entityTypeManager()
//                 ->getStorage('commerce_pricelist')
//                 ->loadByProperties(['name' => 'Price table']);
//                 $pricelist = reset($price_list);
                
//                 for ($i = 1; $i != 6; $i++) {
//                   $unit_variable = ${'unit_' . $i}; // Equivalent to $unit_1, $unit_2, etc.
//                   $price_variable = ${'price_' . $i}; // Equivalent to $price_1, $price_2, etc.
      
//                   if (isset($unit_variable) && isset($price_variable)) {
//                     $existing_price_item = \Drupal::entityTypeManager()
//                       ->getStorage('commerce_pricelist_item')
//                       ->loadByProperties([
//                         'type' => 'commerce_product_variation',
//                         'quantity' => $unit_variable,
//                         'purchasable_entity' => $product_variation->id(),
//                         'price_list_id' => $pricelist->id()
//                       ]);
//                       $existing_price_item_data = reset($existing_price_item);
    
//                     if (!isset($existing_price_item) || empty($existing_price_item)) {
//                       $price_item = PriceListItem::create([
//                         'type' => 'commerce_product_variation',
//                         'pricelist' => $pricelist->id(),
//                         'quantity' => $unit_variable,
//                         'purchasable_entity' => $product_variation->id(),
//                         // 'purchasable_entity' => $variation->id(),
//                         'price' => new \Drupal\commerce_price\Price($price_variable, 'EUR'),
//                         'variation' => $product_variation->id(),
//                         'price_list_id' => $pricelist->id()
//                       ]);
//                       $price_item->save();
//                     }
//                     else{
//                        if($existing_price_item_data->get('price')->value != $price_variable){
//                           $existing_price_item_data->set('price',
//                           [
//                             'number' => $price_variable,
//                             'currency_code' => 'EUR',
//                         ]
//                         );
//                           $existing_price_item_data->save();
//                        } 
//                     }
//                     // Save the PricelistItem.
//                     // $price_item->save();
//                   }
//                 }

  
//           $product->setTitle($product_title);
  
//           if(isset($stock) && $stock > 0) {
//             $product->set('field_available_in_stock', 1);
//           }
//           else{
//             $product->set('field_available_in_stock', 0);
//           }
 
//           $product->set('field_article_group', $article_group);
//           $product->set('field_merchandise_group', $merchandise_group);
//           $product->set('field_guise', strtolower($guise));
//           $product->set('field_weight_kg', $weight_kg);
//           if(!empty($customs_tariff_number)){
//             $product->set('field_customs_tariff_number', $customs_tariff_number);
//             }
//           $product->save();
       
//         }
      }




     // Close the file after reading
     fclose($handle);
   }


}